[{"D:\\portfolio\\portfolio\\src\\index.tsx":"1","D:\\portfolio\\portfolio\\src\\reportWebVitals.ts":"2","D:\\portfolio\\portfolio\\src\\App.tsx":"3","D:\\portfolio\\portfolio\\src\\LoadingOverlay\\LoadingOverlay.tsx":"4","D:\\portfolio\\portfolio\\src\\Mainpage\\Mainpage.tsx":"5"},{"size":588,"mtime":1608688106829,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3215,"mtime":1610390614754,"results":"9","hashOfConfig":"7"},{"size":801,"mtime":1608672327157,"results":"10","hashOfConfig":"7"},{"size":35756,"mtime":1610326020770,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zftymc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\portfolio\\portfolio\\src\\index.tsx",[],["25","26"],"D:\\portfolio\\portfolio\\src\\reportWebVitals.ts",[],"D:\\portfolio\\portfolio\\src\\App.tsx",["27","28","29","30","31","32","33","34"],"import React from 'react';\nimport './App.scss';\nimport { getJSONData } from \"./Tools/Toolkit\";\nimport LoadingOverlay from './LoadingOverlay/LoadingOverlay';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Mainpage from \"./Mainpage/Mainpage\";\n\nconst App = ():JSX.Element => {\n\n  const openMenu = ():void => {\n    setShowNav(!showNav);\n  }\n\n\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const [showNav, setShowNav] = React.useState<boolean>(false);\n\n  return (\n    <div className=\"main\">\n      {/* <LoadingOverlay bgColor=\"#DADED4\" spinnerColor=\"#FFFFFF\" enabled={loading} /> */}\n\n      <div className=\"header\">\n        <div className=\"header__title\"><img src=\"logogs.svg\" alt=\"dsf\" height=\"152px\" width=\"142px\"></img></div>\n        <div className=\"header__menuBtn\"><img className=\"header__menuBtn__icon\" src=\"menuredysvg.svg\" alt=\"dsf\" height=\"50px\" width=\"50px\" onClick={openMenu}></img></div>\n      </div>\n\n      <div className=\"shortNav\" style={{display: (showNav ? 'flex' : 'none')}}>\n          <a className=\"nav__link\" href=\"/\">Home</a>\n          <a className=\"nav__link\" href=\"/\">Projects</a>\n          <a className=\"nav__link\" href=\"/\">About</a>\n          <a className=\"nav__link\" href=\"/\">Contact</a>\n          <span onClick={(e) => setShowNav(false)}>X</span>\n        </div>\n      \n      <div className=\"subSection\">\n        <div className=\"nav\">\n          <a className=\"nav__link\" href=\"/\">Home</a>\n          <a className=\"nav__link\" href=\"/\">Projects</a>\n          <a className=\"nav__link\" href=\"/\">About</a>\n          <a className=\"nav__link\" href=\"/\">Contact</a>\n        </div>\n\n        <div className=\"changesection\">\n          <Switch>\n              <Route \n                path=\"/\"\n                render={() => <Mainpage />}\n                exact\n              />\n              \n              <Route \n                path=\"/main\"\n                render={() => <Mainpage />}\n              />\n\n              {/* <Route \n                path=\"/projects\"\n                render={() => <Tech technologies={technologies} courses={courses} setLoading={setLoading} setRefreshData={setRefreshData} />}\n              />\n\n              <Route \n                path=\"/about\"\n                render={() => <DeleteTech technologies={technologies} setLoading={setLoading} setRefreshData={setRefreshData} />}\n              />\n\n              <Route \n                path=\"/resume\"\n                render={() => <CourseEdit courses={courses} setLoading={setLoading} setRefreshData={setRefreshData} />}\n              />\n\n              <Route \n                path=\"/deleteCourse/:id\"\n                render={() => <DeleteCourse courses={courses} setLoading={setLoading} setRefreshData={setRefreshData} />}\n              /> */}\n\n              {/* <Route component={Error} /> */}\n\n          </Switch>\n        </div>\n\n        <div className=\"socialMedia\">\n          <img src=\"insta.svg\" height=\"40px\" width=\"40px\"></img>\n          <img src=\"facebook.svg\" height=\"40px\" width=\"40px\"></img>\n          <img src=\"linkedin.svg\" height=\"40px\" width=\"40px\"></img>\n          <img src=\"github.svg\" height=\"40px\" width=\"40px\"></img>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\portfolio\\portfolio\\src\\LoadingOverlay\\LoadingOverlay.tsx",[],["35","36"],"D:\\portfolio\\portfolio\\src\\Mainpage\\Mainpage.tsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":22},{"ruleId":"41","severity":1,"message":"46","line":16,"column":10,"nodeType":"43","messageId":"44","endLine":16,"endColumn":17},{"ruleId":"41","severity":1,"message":"47","line":16,"column":19,"nodeType":"43","messageId":"44","endLine":16,"endColumn":29},{"ruleId":"48","severity":1,"message":"49","line":83,"column":11,"nodeType":"50","endLine":83,"endColumn":59},{"ruleId":"48","severity":1,"message":"49","line":84,"column":11,"nodeType":"50","endLine":84,"endColumn":62},{"ruleId":"48","severity":1,"message":"49","line":85,"column":11,"nodeType":"50","endLine":85,"endColumn":62},{"ruleId":"48","severity":1,"message":"49","line":86,"column":11,"nodeType":"50","endLine":86,"endColumn":60},{"ruleId":"37","replacedBy":"51"},{"ruleId":"39","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'getJSONData' is defined but never used.","Identifier","unusedVar","'LoadingOverlay' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["53"],["54"],"no-global-assign","no-unsafe-negation"]